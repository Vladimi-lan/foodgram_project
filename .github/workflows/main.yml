name: workflow

on: 
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.md'

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9.6

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r foodgram/requirements.txt 

    - name: Test with flake8 and django tests
      run: |
        python -m flake8

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2 
        with:
          context: foodgram/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram:v1.0.2022
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/master'
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          sudo docker pull vladimirdevpy/foodgram:v1.0.2022
          sudo docker-compose stop
          sudo docker-compose rm web
          sudo docker-compose up -d
          sudo docker-compose exec -T web python manage.py migrate
          sudo docker-compose exec -T web python manage.py collectstatic --no-input
          sudo docker-compose exec -T web python manage.py loaddata dump.json
          sudo docker system prune -af
          sudo docker volume prune -f
